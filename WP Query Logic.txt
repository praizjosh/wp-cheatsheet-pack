// WP Hook to trim post excerpt length
add_filter( 'excerpt_length', 'custom_excerpt_length', 999 );
/** 
 * https://developer.wordpress.org/reference/hooks/excerpt_length/
 * Change the length of site default excerpt.
 *
 * @param int $length The number of words. Default 55.
 * @return int New excerpt length.
 */

function custom_excerpt_length( $length ) {
    return 25; // number of words. Default is 55.
}


// Call back function to to trim post excerpt length in Oxygen Builder Query Loop
function trim_post_title( $limit ) {
return wp_trim_words(get_the_title(), $limit );
}

function trim_post_excerpt( $limit ) {
return wp_trim_words(get_the_excerpt(), $limit, '' );
}


CPT Breadcrumbs.txt
// Breadcrumbs - Override - Change '/condition/’ URL to '/conditions/'

add_filter( 'wpseo_breadcrumb_links', 'change_condition_to_conditions_2' );
function change_condition_to_conditions_2( $links ) {
global $post;
	
		if(  is_singular('condition')){
			$breadcrumb[] = array(
        'url' => '/conditions/',
        'text' => 'New Condition',
      );

      // Add the new array to the breadcrumbs (for some reason array_push doesn't work)
      array_splice( $links, 1, 1, $breadcrumb );
		}
	
return $links;
}


add_filter( 'wpseo_breadcrumb_links', 'change_condition_to_conditions' );
function change_condition_to_conditions( $links ) {
global $post;
	
		if(  is_singular('condition')){
        $links[1] = array('text' => 'Conditions', 'url' => '/conditions/', 'allow_html' => 1);
}
	
return $links;
}


// Breadcrumbs - Override - Blog Posts via Condition Category - '/condition/' append
add_filter( 'wpseo_breadcrumb_links', 'blog_post_breadcrumb_condition_append' );
function blog_post_breadcrumb_condition_append( $links ) {
global $post;
if(is_single() ){
$breadcrumb[] = array(
'url' => site_url( '/conditions/' ),
'text' => 'Conditions',
);
  //array_unshift($links, $breadcrumb);
	array_splice($links, 1, -2, $breadcrumb);
}

return $links;
}

// Breadcrumbs - Override - Blog Posts via Condition Category
add_filter( 'wpseo_breadcrumb_links', 'blog_post_breadcrumb_condition' );
function blog_post_breadcrumb_condition( $links ) {
global $post;
if( in_category( 'body' ) && is_single() ){
$breadcrumb[] = array(
'url' => site_url( '/conditions/body/' ),
'text' => 'Body',
);
  //array_unshift($links, $breadcrumb);
	array_splice($links, 1, -2, $breadcrumb);
}
	
	elseif( in_category( 'face' ) && is_single() ){
$breadcrumb[] = array(
'url' => site_url( '/conditions/face/' ),
'text' => 'Face',
);
  //array_unshift($links, $breadcrumb);
	array_splice($links, 1, -2, $breadcrumb);
}
	
	elseif( in_category( 'face-and-skin' ) && is_single() ){
$breadcrumb[] = array(
'url' => site_url( '/conditions/face-and-skin/' ),
'text' => 'Face and Skin',
);
  //array_unshift($links, $breadcrumb);
	array_splice($links, 1, -2, $breadcrumb);
}

return $links;
}



CPT Breadcrumbs.txt
// 	My code to query a CPT showing all posts
    $args2 = array(
        'post_type' => 'treatment', // Insert CPT name
        'orderby' => 'post_title',
        'order' => 'DSC',
        'post_status'    => 'publish',
        'posts_per_page' => '-1'
    );


// 	My code to query CPT that have sub-categories
//
$args2 = array(
    'post_type' => 'treatment', // Insert CPT name
    'orderby' => 'post_title',
    'order' => 'ASC',
    'post_status'    => 'publish',
// 							'category_name' => 'face-and-skin',
    'posts_per_page' => '-1'
);

<?php
$args99 = array(
	 'post_type' => 'condition',
	 'category_name' => 'body'
	);
$loop = new WP_Query( $args99 );
while ( $loop->have_posts() ) : $loop->the_post();
  echo  the_ID();
	echo $post->ID;
endwhile;
?>

// To find all WP post types exisiting on a WP site do:
<?php $args = array(
     'public'   => true,
     '_builtin' => false
);?>
<?php $show_post_types = get_post_types( $args ); ?> 
<pre>
  <?php print_r($show_post_types); ?> 
</pre>
	
// Looping through a specific Post Type
<?php
$args = array( 
    'post_type' => 'case_studies'
);

$loop = new WP_Query( $args );
while ( $loop->have_posts() ) : $loop->the_post();
    the_ID();
endwhile;
?>

$slug = get_query_var('conditions');
    $category = get_category_by_slug($slug);
    echo $category->name.' Conditions'; // append "Conditions" to category title


// Adding permalink to Featured image

<?php echo '<a href="'.get_the_permalink().'">'.get_the_title().'</a>'; ?>
<h3>
	<div onclick="<?php echo $url; ?>" style="cursor: grab;">
</h3>

<a class="blog-post-image" href="<?php the_permalink();?>" style="background-image: url(<?php echo $src[0]; ?> ) !important;"></a>
<h3>
	<div onclick="<?php echo the_permalink(); ?>" style="cursor: grab;">
</h3>

<div onclick="location.href='<?php the_permalink();?>';" class="blog-post-image" style="background-image: url(<?php echo $src[0]; ?> ) !important; cursor: pointer !important;">
</div>

$my_categories[0] = $the_image


// Querying through WP Post type and adding pagination
//
CPT Breadcrumbs.txt
<section class="related-posts">
				<div class="container">
					<h2 class="text-center">
						<?php 
// 							the_field('lb_you_might_also_like', 'option'); 
// 							 echo 'BLOG: '.$category->name.' Conditions';
							 echo $category->name.' Blog';
						?>
<!-- 						READ MORE FROM THIS CATEGORY -->
					</h2>

					<div class="blogList d-flex flex-wrap justify-content-center">
						<?php
						
// 				$paged = (get_query_var('paged')) ? get_query_var('paged') : 1;
						
					if( in_category('face') ){
						$related_args = array(
							'post_type' => 'post',
// 							'category_name' => 'face',
// 							'posts_per_page' => -1,
// 							'orderby'=>'date',
							'post_status' => 'publish',
// 							'post__not_in' => array(get_the_ID(), 1123, 1121),
							'order' => 'DSC',
							'paged' => $paged,
						);
					}
					elseif( in_category ('body') ){
						$related_args = array(
							'post_type' => 'post',
// 							'category_name' => 'body',
							'posts_per_page' => 3,
							'post_status' => 'publish',
// 							'post__not_in' => array(get_the_ID(), 1123, 1121),
							'order' => 'DSC',
// 							'paged' => $paged,
						);
					}
					elseif( in_category ('face-and-skin') ){	
						$related_args = array(
							'post_type' => 'post',
// 							'category_name' => 'face-and-skin',
							'posts_per_page' => 5,
							'post_status' => 'publish',
// 							'post__not_in' => array(get_the_ID(), 1123, 1121),
							'order' => 'DSC',
//  						'paged' => $paged,
						);
					}



// INSERT YOUR CODE HERE

						$loop2 = new WP_Query($related_args);
						if ($loop2->have_posts()) :
							while ($loop2->have_posts()) : $loop2->the_post();
// 								global $post;
						?>

								<div class="listPost col-md-4">
									<figure>
										<?php
										$theimage = null;
										if (get_field('banner_image_related')) {
											$theimage = get_field('banner_image_related');
										} elseif (get_field('top_banner_image')) {
											$theimage = get_field('top_banner_image');
										} else {
// 											$theimage = '/wp-content/uploads/placeholders/conditions.jpg'; 
											$theimage = get_field('post_image');
											}
										?>
										<img src="<?= $theimage ?>" alt="<?php echo get_the_title(); ?>" />
										<?php echo '<a href="' . get_the_permalink() . '">' . get_the_title() . '</a>'; ?>
									</figure>
									<div class="listPostInfo text-center">
										<h3><?php echo '<a href="' . get_the_permalink() . '">' . get_the_title() . '</a>'; ?></h3>
										<?php
										$content_desc	=	get_field("excerpt");
										$new_desc		=	wp_strip_all_tags($content_desc);
										$new_desc		=   str_replace(" (Botox®, Bocouture® &amp; Azzalure®)", "", $new_desc);
										$new_desc		=	wp_trim_words($new_desc, 10, '...');
										?>
										<p>
											<?php echo $new_desc; ?>
										</p>
									</div>									
								</div>
						<?php
				endwhile;
		endif;
						
// 				Pagination callback function
// 					wp_numeric_posts_nav();
//  					post_pagination();



// 			$total_pages = $loop2->max_num_pages;
// 			if ($total_pages > 1){

// 				$current_page = max(1, get_query_var('paged'));

// 				echo paginate_links(array(
// 					'base' => get_pagenum_link(1) . '%_%',
// 					'format' => '%#%',
// // 					'format' => 'page/%#%',
// // 					'format' => '%#%',
// 					'current' => $current_page,
// 					'total' => $total_pages,
// 					'prev_text'    => __('« prev'),
// 					'next_text'    => __('next »'),
// 				));
//     		}   
// 	var_dump($paginate_links);
						
	wp_reset_postdata();
						
						?>
					</div>
				</div>
</section>

//
